<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (C) Scott Cranton and Jakub Korab
  ~ https://github.com/CamelCookbook
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       ">

    <bean id="flakyProcessor" class="org.camelcookbook.error.shared.FlakyProcessor"/>

    <camelContext errorHandlerRef="dlqErrorHandler" xmlns="http://camel.apache.org/schema/spring">
        <errorHandler id="dlqErrorHandler"
                      type="DeadLetterChannel"
                      deadLetterUri="seda:error"/>

        <errorHandler id="dlqRouteSpecificErrorHandler"
                      type="DeadLetterChannel"
                      deadLetterUri="seda:error"/>

        <errorHandler id="dlqRouteSpecificOriginalErrorHandler"
                      type="DeadLetterChannel"
                      deadLetterUri="seda:error"
                      useOriginalMessage="true"/>

        <route id="myDlqRoute">
            <from uri="direct:start"/>
            <setHeader headerName="myHeader">
                <constant>changed</constant>
            </setHeader>
            <bean ref="flakyProcessor"/>
            <to uri="mock:result"/>
        </route>

        <route id="myDlqMultistepRoute">
            <from uri="direct:multiroute"/>
            <setHeader headerName="myHeader">
                <constant>multistep</constant>
            </setHeader>
            <inOut uri="seda:flakyroute"/>
            <setHeader headerName="myHeader">
                <constant>changed</constant>
            </setHeader>
            <to uri="mock:result"/>
        </route>

        <route id="myFlakyRoute">
            <from uri="seda:flakyroute"/>
            <setHeader headerName="myHeader">
                <constant>flaky</constant>
            </setHeader>
            <bean ref="flakyProcessor"/>
        </route>

        <route id="myDlqMultistepOriginalRoute">
            <from uri="direct:multirouteOriginal"/>
            <setHeader headerName="myHeader">
                <constant>multistep</constant>
            </setHeader>
            <inOut uri="seda:flakyrouteOriginal"/>
            <setHeader headerName="myHeader">
                <constant>changed</constant>
            </setHeader>
            <to uri="mock:result"/>
        </route>

        <route id="myFlakyRouteOriginal"
               errorHandlerRef="dlqRouteSpecificOriginalErrorHandler">
            <from uri="seda:flakyrouteOriginal"/>
            <setHeader headerName="myHeader">
                <constant>flaky</constant>
            </setHeader>
            <bean ref="flakyProcessor"/>
        </route>

        <route id="myDlqSpecificRoute"
               errorHandlerRef="dlqRouteSpecificErrorHandler">
            <from uri="seda:routeSpecific"/>
            <bean ref="flakyProcessor"/>
            <to uri="mock:result"/>
        </route>

        <route id="myDlqOriginalRoute"
               errorHandlerRef="dlqRouteSpecificOriginalErrorHandler">
            <from uri="direct:useOriginal"/>
            <setHeader headerName="myHeader">
                <constant>changed</constant>
            </setHeader>
            <bean ref="flakyProcessor"/>
            <to uri="mock:result"/>
        </route>

        <route id="myDlqChannelRoute">
            <from uri="seda:error"/>
            <to uri="mock:error"/>
        </route>
    </camelContext>

</beans>
